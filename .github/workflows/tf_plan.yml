name: tf_plan

on:
  push:
    branches:
      - 'main'
    paths:
      - 'stg/**'
  workflow_dispatch:

env:
  AWS_REGION: ap-northeast-1
  TF_VERSION: 1.7.5

permissions:
  id-token: write
  contents: read

jobs:
  plan:
    name: terraform plan
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: stg/
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{env.AWS_REGION}}
          role-to-assume: ${{ secrets.AWS_ASSUME_ROLE }}
          role-session-name: GithubActions_AssumeRole
          #CloudTrailログ等の監査ログでどのセッションがどの操作を行ったのかを追跡するために設定。
            
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Init
        id: init
        run: |
          terraform init

      - name: Validate
        id: validate
        run: |
          terraform validate

      - name: Fmt
        id: fmt
        run: |
          terraform fmt
    
      - name: Plan
        id: plan
        run: |
          terraform plan

      # planの結果を環境変数に格納
      - name: truncate terraform plan result
        run: |
          echo 'PLAN_RESULT<> $GITHUB_ENV
          echo '${{ steps.plan.outputs.stdout }}' | grep -e "No changes." -e "Plan:" >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV

      - if: always()
      name: Slack Notification
      uses: rtCamp/action-slack-notify@v2.2.0
      env:
        SLACK_CHANNEL: ${{ secrets.SLACK_CHANNEL_NAME }}
        SLACK_COLOR: ${{ job.status }}
        SLACK_MESSAGE: '${{ job.status }}: ${{ env.PLAN_RESULT }}'
        SLACK_TITLE: Message
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
