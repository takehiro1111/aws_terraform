name: tf_plan
run-name: ${{ github.workflow }} triggered by ${{ github.actor }}

on:
  pull_request:
    branches:
      - renovate/*
    paths:
      - '**'
    types: [opened, synchronize]
  workflow_dispatch:

env:
  AWS_REGION: ap-northeast-1
  TF_VERSION: 1.9.1
  SLACK_ICON: terraform_logo.png

permissions:
  id-token: write
  contents: read

jobs:
  plan:
    name: terraform_ci
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Configure AWS credentials via OIDC
        uses: aws-actions/configure-aws-credentials@a03048d87541d1d9fcf2ecf528a4a65ba9bd7838 # v4
        with:
          aws-region: ${{env.AWS_REGION}}
          role-to-assume: ${{ secrets.AWS_ASSUME_ROLE }}
          role-session-name: GithubActions_AssumeRole

      - name: Get Terraform version
        id: get_tf_version
        run: |
          TF_VERSION=$(cat .terraform-version)
          echo TF_VERSION=$TF_VERSION >> $GITHUB_OUTPUT
            
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd # v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Init
        id: init
        run: |
          terraform init

      - name: Validate
        id: validate
        run: |
          terraform validate

      - name: Fmt
        id: fmt
        run: |
          terraform fmt
    
      - name: Plan
        id: plan
        run: |
          terraform plan | tee plan_output.txt

      # planの結果を環境変数に格納
      - name: Extract terraform plan result
        run: |
          PLAN_RESULT=$(grep -e "No changes." -e "Plan:" plan_output.txt | sed 's/\x1B\[[0-9;]*[mK]//g')
          echo "PLAN_RESULT=${PLAN_RESULT}" >> $GITHUB_ENV

      - if: always()
        name: Slack Notification
        uses: rtCamp/action-slack-notify@e31e87e03dd19038e411e38ae27cbad084a90661 # v2.3.3
        env:
          SLACK_CHANNEL: ${{ secrets.SLACK_CHANNEL_NAME }}
          SLACK_COLOR: ${{ job.status }}
          SLACK_USERNAME: Plan
          SLACK_MESSAGE: '${{ job.status }}: ${{ env.PLAN_RESULT }}'
          SLACK_ICON: ${{ env.SLACK_ICON }}
          SLACK_TITLE: Execute Plan Result🚀
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
