name: tf_apply_target

on:
  # pull_request:
  #   types: [opened, synchronize, reopened]
  # push:
  #   branches:
  #     - 'main'
  #   paths:
  #     - 'common/**'
  workflow_dispatch:

env:
  AWS_REGION: ap-northeast-1
  TF_VERSION: 1.9.1
  SLACK_ICON: terraform_logo.png
jobs:
  terraform1:
    name: terraform apply
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: common/

    permissions:
      id-token: write
      contents: read
      pull-requests: write 
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Check for specific commit message
        id: check_message
        run: |
          commit_message=$(git log -n 3 --pretty=%B)
          echo "Latest commit message: $commit_message"
          if echo "$commit_message" | grep -qE "aws_wafv2_web_acl|地域制限|国"; then
            echo "MATCH_FOUND=true" >> $GITHUB_ENV
          else
            echo "MATCH_FOUND=false" >> $GITHUB_ENV
          fi

      - name: Configure AWS credentials via OIDC
        uses: aws-actions/configure-aws-credentials@f24d7193d98baebaeacc7e2227925dd47cc267f5 # v4
        with:
          aws-region: ${{env.AWS_REGION}}
          role-to-assume: ${{ secrets.AWS_ASSUME_ROLE }}
          role-session-name: GithubActions_AssumeRole
          #CloudTrailログ等の監査ログでどのセッションがどの操作を行ったのかを追跡するために設定。
            
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd # v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Check for WAF Regional Rule Changes
        id: check_waf_rule
        run: |
          if git diff origin/main...HEAD | grep -qE 'resource "aws_wafv2_web_acl"'; then
            if git diff origin/main...HEAD | grep -q 'geo_match_statement'; then
              echo "apply=true" >> $GITHUB_ENV
            else
              echo "apply=false" >> $GITHUB_ENV
            fi
          else
            echo "apply=false" >> $GITHUB_ENV
          fi

      - name: Init
        id: init
        if: env.apply == 'true'
        run: |
          terraform init

      # - name: Validate
      #   run: |
      #     terraform validate

      # - name: Fmt
      #   run: |
      #     terraform fmt -check

      - name: Plan
        if: env.apply == 'true'
        run: |
          terraform plan
      
      - name: Apply
        id: apply
        if: env.apply == 'true'
        run: |
          terraform apply -auto-approve | tee apply_output.txt

      # applyの結果を環境変数に格納
      - name: Extract terraform apply result
        run: |
          APPLY_RESULT=$(grep -e "No changes." -e "Apply complete! Resources:" apply_output.txt | sed 's/\x1B\[[0-9;]*[mK]//g' | tr -d '\n')
          echo "APPLY_RESULT=${APPLY_RESULT}" >> $GITHUB_ENV

      - if: always()
        name: Slack Notification
        uses: rtCamp/action-slack-notify@e31e87e03dd19038e411e38ae27cbad084a90661 # v2.3.3
        env:
          SLACK_CHANNEL: ${{ secrets.SLACK_CHANNEL_NAME }}
          SLACK_COLOR: ${{ job.status }}
          SLACK_USERNAME: Deploy
          SLACK_MESSAGE: '${{ job.status }}: ${{ env.APPLY_RESULT }}'
          SLACK_ICON: ${{ env.SLACK_ICON }}
          SLACK_TITLE: Execute Apply Result🚀
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
