name: waf_regionallimit_update_slack
run-name: ${{ github.workflow }} by @${{ github.actor }}

on:
  workflow_dispatch:
    inputs:
      common:
        description: 'common.com'
        required: false
        default: ''
        type: choice
        options:
          - 'apply_false'
          - 'apply_true'
          - ''

env:
  AWS_REGION: ap-northeast-1
  COMMON_DIR: common/
  MY_ACCOUNT_DIR: my_account/prod/
  COMMON_ASSUME_ROLE: arn:aws:iam::421643133281:role/deploy-github-actions-for-waf
  MY_ACCOUNT_ASSUMR_ROLE:
  SLACK_ICON: terraform_logo.png
  ASSUME_ROLE: ${{ secrets.AWS_ASSUME_ROLE_FOR_WAF }}

defaults:
  run: 
    shell: bash

permissions:
  id-token: write
  actions: write
  contents: read

jobs:
##########################################################
# Common
##########################################################
# WAF Rule Disabled
  apply-false:
    name: Apply-False
    runs-on: ubuntu-latest
    timeout-minutes: 5
    if: ${{ inputs.common == 'apply_false' }}
    defaults:
      run:
        working-directory: ${{ env.COMMON_DIR}}
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Configure AWS credentials via OIDC
        uses: aws-actions/configure-aws-credentials@a03048d87541d1d9fcf2ecf528a4a65ba9bd7838 # v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ env.ASSUME_ROLE }}
          role-session-name: ${{ github.workflow }}_${{ github.job }}

      - name: Get Terraform version
        id: get_tf_version
        run: |
          TF_VERSION=$(cat .terraform-version)
          echo TF_VERSION=$TF_VERSION >> $GITHUB_OUTPUT

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd # v3
        id: setup_terraform
        with:
          terraform_version: ${{ steps.get_tf_version.outputs.TF_VERSION }}

      - name: Init
        id: init
        if: ${{ steps.setup_terraform.outcome == 'success' }}
        continue-on-error: false
        run: terraform init

      - name: Terraform Plan
        id: plan
        run: terraform plan -var 'waf_rule_regional_limit=false' -target='aws_wafv2_web_acl.region_count[0]' -out=tfplan

      - name: Send Slack notification for confirmation
        uses: rtCamp/action-slack-notify@e31e87e03dd19038e411e38ae27cbad084a90661 # v2.3.3
        with:
          webhook_url: ${{ secrets.SLACK_WEBHOOK_LAMBDA_NOTIFY }}
          message: |
            `terraform plan` has completed. Please confirm to proceed with `terraform apply`.
            Respond with `yes` or `no` to continue the process.
        env:
          SLACK_COLOR: '#00FF00'
          SLACK_USERNAME: 'TerraformBot'
          SLACK_CHANNEL: ${{ secrets.SLACK_CHANNEL_NAME }}
          SLACK_ICON: ${{ env.SLACK_ICON }}
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_LAMBDA_NOTIFY }}

      - name: Wait for Slack confirmation
        run: |
          echo "Waiting for confirmation..."
          for i in {1..12}; do
            result=$(curl -s -H "Authorization: Bearer ${{ env.SLACK_BOT_TOKEN }}" \
                "https://slack.com/api/conversations.history?channel=${{ env.SLACK_CHANNEL_ID }}&limit=1" \
                | jq -r '.messages[0].text')
            echo "Last message: $result"
            if [[ "$result" == "yes" ]]; then
              echo "Confirmed. Proceeding with terraform apply."
              exit 0
            elif [[ "$result" == "no" ]]; then
              echo "Confirmation declined. Stopping process."
              exit 1
            fi
            sleep 10
          done
        env:
          SLACK_CHANNEL_ID: ${{ secrets.SLACK_CHANNEL_ID_LAMBDA_NOTIFY }}
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}


      - name: Apply
        if: success()
        run: terraform apply -lock=false -auto-approve -var 'waf_rule_regional_limit=false' -target='aws_wafv2_web_acl.region_count[0]'

# WAF Rule Enabled
  apply-true:
    name: Apply-True
    runs-on: ubuntu-latest
    timeout-minutes: 5
    if: ${{ inputs.common == 'apply_true' }}
    defaults:
      run:
        working-directory: ${{ env.COMMON_DIR}}
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Configure AWS credentials via OIDC
        uses: aws-actions/configure-aws-credentials@a03048d87541d1d9fcf2ecf528a4a65ba9bd7838 # v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ env.ASSUME_ROLE }}
          role-session-name: ${{ github.workflow }}_${{ github.job }}

      - name: Get Terraform version
        id: get_tf_version
        run: |
          TF_VERSION=$(cat .terraform-version)
          echo TF_VERSION=$TF_VERSION >> $GITHUB_OUTPUT

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd # v3
        id: setup_terraform
        with:
          terraform_version: ${{ steps.get_tf_version.outputs.TF_VERSION }}

      - name: Init
        id: init
        if: ${{ steps.setup_terraform.outcome == 'success' }}
        continue-on-error: false
        run: terraform init

      - name: Apply
        if: ${{ steps.init.outcome == 'success' }}
        run: terraform apply -lock=false -auto-approve -var 'waf_rule_regional_limit=true' -target='aws_wafv2_web_acl.region_count[0]'

##########################################################
# Notify Slack
##########################################################
  notify:
    name: Slack Notification
    runs-on: ubuntu-latest
    needs: [apply-false,apply-true]
    if:  always() && (needs.apply-false.result == 'success' || needs.apply-true.result == 'success')
    steps:
      - name: Get the Result of Apply
        uses: technote-space/workflow-conclusion-action@45ce8e0eb155657ab8ccf346ade734257fd196a5 # v3
        id: conclusion

      - name: Set Slack Title and Username
        id: define_slack_variables
        run: |
          if [[ "${{ needs.apply-false.result }}" == "success" ]]; then
            echo "SLACK_TITLE=RegionalLimit Disabled Successful ðŸš«" >> $GITHUB_OUTPUT
            echo "SLACK_USERNAME=WAF Apply FalseðŸš€" >> $GITHUB_OUTPUT
            echo "SLACK_MESSAGE=directory: \`${{ env.COMMON_DIR }}\`" >> $GITHUB_OUTPUT
          elif [[ "${{ needs.apply-true.result }}" == "success" ]]; then
            echo "SLACK_TITLE=RegionalLimit Enabled Successful âœ…" >> $GITHUB_OUTPUT
            echo "SLACK_USERNAME=WAF Apply TrueðŸš€" >> $GITHUB_OUTPUT
            echo "SLACK_MESSAGE=directory: \`${{ env.COMMON_DIR }}\`" >> $GITHUB_OUTPUT
          fi
      
      - name: Slack Notification
        uses: rtCamp/action-slack-notify@e31e87e03dd19038e411e38ae27cbad084a90661 # v2.3.3
        env:
          SLACK_CHANNEL: ${{ secrets.SLACK_CHANNEL_NAME }}
          SLACK_COLOR: ${{ steps.conclusion.outputs.conclusion }}
          SLACK_USERNAME: ${{ steps.define_slack_variables.outputs.SLACK_USERNAME }}
          SLACK_MESSAGE: ${{ steps.define_slack_variables.outputs.SLACK_MESSAGE }}
          SLACK_ICON: ${{ env.SLACK_ICON }}
          SLACK_TITLE: ${{ steps.define_slack_variables.outputs.SLACK_TITLE }}
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_LAMBDA_NOTIFY }}
